<?php
/**
 * WordPressApiTest
 * PHP version 8.1
 *
 * @category Class
 * @package  COMPITAUT\DirectAdminAPI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Swagger DirectAdmin API
 *
 * Swagger API for DirectAdmin server
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@directadmin.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace COMPITAUT\DirectAdminAPI\Test\Api;

use \COMPITAUT\DirectAdminAPI\Configuration;
use \COMPITAUT\DirectAdminAPI\ApiException;
use \COMPITAUT\DirectAdminAPI\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * WordPressApiTest Class Doc Comment
 *
 * @category Class
 * @package  COMPITAUT\DirectAdminAPI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class WordPressApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for apiWordpressInstallPost
     *
     * Performs new wordpress installation in a given location.
     *
     */
    public function testApiWordpressInstallPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiWordpressInstallQuickPost
     *
     * Performs quick new wordpress installation in a given location.
     *
     */
    public function testApiWordpressInstallQuickPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiWordpressLocationsGet
     *
     * Returns list of known wordpress installations and potential installation locations..
     *
     */
    public function testApiWordpressLocationsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiWordpressLocationsLocationIdConfigAutoUpdatePut
     *
     * Change wordpress core auto update state..
     *
     */
    public function testApiWordpressLocationsLocationIdConfigAutoUpdatePut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiWordpressLocationsLocationIdConfigGet
     *
     * Retrieve wordpress database configuration for a single installation..
     *
     */
    public function testApiWordpressLocationsLocationIdConfigGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiWordpressLocationsLocationIdConfigPut
     *
     * Change wordpress database configuration for a single installation..
     *
     */
    public function testApiWordpressLocationsLocationIdConfigPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiWordpressLocationsLocationIdDelete
     *
     * Remove wordpress installation..
     *
     */
    public function testApiWordpressLocationsLocationIdDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiWordpressLocationsLocationIdOptionsGet
     *
     * Retrieve all wordpress options for a single installation..
     *
     */
    public function testApiWordpressLocationsLocationIdOptionsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiWordpressLocationsLocationIdOptionsPatch
     *
     * Change wordpress options for a given installation..
     *
     */
    public function testApiWordpressLocationsLocationIdOptionsPatch()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiWordpressLocationsLocationIdUsersGet
     *
     * Retrieve all wordpress user accounts.
     *
     */
    public function testApiWordpressLocationsLocationIdUsersGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiWordpressLocationsLocationIdUsersUserIdChangePasswordPost
     *
     * Change wordpress user account password.
     *
     */
    public function testApiWordpressLocationsLocationIdUsersUserIdChangePasswordPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiWordpressLocationsLocationIdUsersUserIdSsoLoginPost
     *
     * Create magic login URL..
     *
     */
    public function testApiWordpressLocationsLocationIdUsersUserIdSsoLoginPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiWordpressLocationsLocationIdWordpressGet
     *
     * Retrieve information about a single WordPress installation.
     *
     */
    public function testApiWordpressLocationsLocationIdWordpressGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
