<?php
/**
 * DatabaseApiTest
 * PHP version 8.1
 *
 * @category Class
 * @package  COMPITAUT\DirectAdminAPI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Swagger DirectAdmin API
 *
 * Swagger API for DirectAdmin server
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@directadmin.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.14.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace COMPITAUT\DirectAdminAPI\Test\Api;

use \COMPITAUT\DirectAdminAPI\Configuration;
use \COMPITAUT\DirectAdminAPI\ApiException;
use \COMPITAUT\DirectAdminAPI\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * DatabaseApiTest Class Doc Comment
 *
 * @category Class
 * @package  COMPITAUT\DirectAdminAPI
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class DatabaseApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for apiDbManageCloneDbPost
     *
     * Clone database.
     *
     */
    public function testApiDbManageCloneDbPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiDbManageCreateDbPost
     *
     * Create empty database.
     *
     */
    public function testApiDbManageCreateDbPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiDbManageCreateDbWithUserPost
     *
     * Create database with user.
     *
     */
    public function testApiDbManageCreateDbWithUserPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiDbManageCreateUserPost
     *
     * Create database user.
     *
     */
    public function testApiDbManageCreateUserPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiDbManageDatabasesDatabaseCheckPost
     *
     * Check database.
     *
     */
    public function testApiDbManageDatabasesDatabaseCheckPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiDbManageDatabasesDatabaseDelete
     *
     * Delete database.
     *
     */
    public function testApiDbManageDatabasesDatabaseDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiDbManageDatabasesDatabaseExportGet
     *
     * Export database.
     *
     */
    public function testApiDbManageDatabasesDatabaseExportGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiDbManageDatabasesDatabaseFixDefinersPost
     *
     * Fix broken database definers.
     *
     */
    public function testApiDbManageDatabasesDatabaseFixDefinersPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiDbManageDatabasesDatabaseImportPost
     *
     * Import database backup.
     *
     */
    public function testApiDbManageDatabasesDatabaseImportPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiDbManageDatabasesDatabaseOptimizePost
     *
     * Optimize database.
     *
     */
    public function testApiDbManageDatabasesDatabaseOptimizePost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiDbManageDatabasesDatabaseRepairPost
     *
     * Repair database.
     *
     */
    public function testApiDbManageDatabasesDatabaseRepairPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiDbManageUsersDbuserChangeHostsPost
     *
     * Change database user hosts.
     *
     */
    public function testApiDbManageUsersDbuserChangeHostsPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiDbManageUsersDbuserChangePasswordPost
     *
     * Change database user password.
     *
     */
    public function testApiDbManageUsersDbuserChangePasswordPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiDbManageUsersDbuserDatabasesDatabaseChangePrivsPut
     *
     * Set database privileges for dbuser.
     *
     */
    public function testApiDbManageUsersDbuserDatabasesDatabaseChangePrivsPut()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiDbManageUsersDbuserDelete
     *
     * Delete database user.
     *
     */
    public function testApiDbManageUsersDbuserDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiDbShowDatabasesDatabaseGet
     *
     * Get Database metadata.
     *
     */
    public function testApiDbShowDatabasesDatabaseGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiDbShowDatabasesDatabaseUsersGet
     *
     * Get Database info.
     *
     */
    public function testApiDbShowDatabasesDatabaseUsersGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiDbShowDatabasesGet
     *
     * Get Databases list.
     *
     */
    public function testApiDbShowDatabasesGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiDbShowInfoGet
     *
     * Database server info.
     *
     */
    public function testApiDbShowInfoGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiDbShowUsersDbuserDatabasesGet
     *
     * Get user databases.
     *
     */
    public function testApiDbShowUsersDbuserDatabasesGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiDbShowUsersDbuserGet
     *
     * Get User.
     *
     */
    public function testApiDbShowUsersDbuserGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiDbShowUsersGet
     *
     * Get Users.
     *
     */
    public function testApiDbShowUsersGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiPhpmyadminSsoAccountAccessPost
     *
     * Create PhpMyAdmin single sign-on URL for user account access..
     *
     */
    public function testApiPhpmyadminSsoAccountAccessPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for apiPhpmyadminSsoDatabaseAccessDatabasePost
     *
     * Create PhpMyAdmin single sign-on URL for single DB access..
     *
     */
    public function testApiPhpmyadminSsoDatabaseAccessDatabasePost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
